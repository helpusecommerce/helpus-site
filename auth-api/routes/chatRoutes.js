import express from 'express';
import fetch from 'node-fetch';
import dotenv from 'dotenv';
dotenv.config();

const router = express.Router();

// POST /api/chatgpt
router.post('/chatgpt', async (req, res) => {
  const { message } = req.body;

  if (!message || typeof message !== 'string') {
    return res.status(400).json({ error: 'Mensagem inv√°lida.' });
  }

  try {
    const response = await fetch('https://openrouter.ai/api/v1/chat/completions', {
      method: 'POST',
      headers: {
        'Authorization': `Bearer ${process.env.OPENROUTER_API_KEY}`,
        'Content-Type': 'application/json',
        'HTTP-Referer': 'https://helpusa.com.br',
        'X-Title': 'HelpUS Chat',
      },
      body: JSON.stringify({
        model: 'mistralai/mistral-7b-instruct:free',
        messages: [
          {
            role: 'system',
            content: `
Voc√™ √© Hel, o assistente virtual oficial da empresa HelpUS.

Regras:
- Sempre responda em **portugu√™s do Brasil**.
- Seja educado, direto e claro.
- Comece com uma sauda√ß√£o simp√°tica se for a primeira intera√ß√£o.
- S√≥ fale sobre os servi√ßos da HelpUS listados abaixo:

Servi√ßos oferecidos pela HelpUS:
1. Consultoria para vistos americanos (B1/B2, F1, F2, EB1A, EB2-NIW)
2. Abertura de empresas nos EUA (LLC, EIN, endere√ßo fiscal)
3. Documenta√ß√£o fiscal e tribut√°ria (ITIN, dedu√ß√µes, imposto de renda)
4. Cria√ß√£o de sites profissionais e e-commerces

Se a pergunta estiver relacionada a esses servi√ßos, explique como funciona e ofere√ßa ajuda.

Se a pergunta for sobre algo que exige advogado, autoridade consular ou decis√£o governamental, informe com gentileza que voc√™ √© apenas um assistente virtual e n√£o oferece assessoria legal.
            `.trim(),
          },
          {
            role: 'user',
            content: message,
          }
        ]
      }),
    });

    const data = await response.json();
    console.log('üîÅ Retorno do OpenRouter:', JSON.stringify(data));

    if (data.error) {
      console.error('‚ùå Erro da IA:', data.error);
      return res.status(500).json({ error: data.error.message || 'Erro da IA' });
    }

    const resposta = data.choices?.[0]?.message?.content;

    if (!resposta) {
      console.warn('‚ö†Ô∏è Resposta da IA veio vazia ou indefinida');
      return res.status(500).json({ error: 'Resposta vazia da IA.' });
    }

    res.json({ resposta });
  } catch (error) {
    console.error('üî• Erro na API do OpenRouter:', error);
    res.status(500).json({ error: error.message || 'Erro interno no servidor.' });
  }
});

export default router;
